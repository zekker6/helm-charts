{{- define "homeserver.yaml" }}
{{- if .Values.matrix.homeserverOverride }}
{{- toYaml .Values.matrix.homeserverOverride }}
{{- else }}
## Server ##

# The domain name of the server, with optional explicit port.
# This is used by remote servers to connect to this server,
# e.g. matrix.org, localhost:8080, etc.
# This is also the last part of your UserID.
#
server_name: {{ .Values.matrix.serverName }}

# When running as a daemon, the file to store the pid in
#
pid_file: /data/homeserver.pid

# The public-facing base URL that clients use to access this HS
# (not including _matrix/...). This is the same URL a user would
# enter into the 'custom HS URL' field on their client. If you
# use synapse with a reverse proxy, this should be the URL to reach
# synapse via the proxy.
#
public_baseurl: {{ include "matrix.baseUrl" . | quote }}
# Set the soft limit on the number of file descriptors synapse can use
# Zero is used to indicate synapse should set the soft limit to the
# hard limit.
#
#soft_file_limit: 0

# Presence tracking allows users to see the state (e.g online/offline)
# of other local and remote users. Set the enabled sub-option to false
# to disable presence tracking on this homeserver.
#
# Defaults to true.
presence:
  enabled: {{ .Values.matrix.presence }}

# Whether to require authentication to retrieve profile data (avatars,
# display names) of other users through the client API. Defaults to
# 'false'. Note that profile data is also available via the federation
# API, so this setting is of limited value if federation is enabled on
# the server.
#
#require_auth_for_profile_requests: true

# Uncomment to require a user to share a room with another user in order
# to retrieve their profile information. Only checked on Client-Server
# requests. Profile requests from other servers should be checked by the
# requesting server. Defaults to 'false'.
#
#limit_profile_requests_to_users_who_share_rooms: true

# If set to 'true', removes the need for authentication to access the server's
# public rooms directory through the client API, meaning that anyone can
# query the room directory. Defaults to 'false'.
#
#allow_public_rooms_without_auth: true

# If set to 'true', allows any other homeserver to fetch the server's public
# rooms directory via federation. Defaults to 'false'.
#
allow_public_rooms_over_federation: {{ and .Values.matrix.federation.enabled .Values.matrix.federation.allowPublicRooms }}

# Whether room invites to users on this server should be blocked
# (except those sent by local server admins). The default is False.
#
block_non_admin_invites: {{ .Values.matrix.blockNonAdminInvites }}

# Room searching
#
# If disabled, new messages will not be indexed for searching and users
# will receive errors when searching for messages. Defaults to enabled.
#
enable_search: {{ .Values.matrix.search }}

# Restrict federation to the following whitelist of domains.
# N.B. we recommend also firewalling your federation listener to limit
# inbound federation traffic as early as possible, rather than relying
# purely on this application-layer restriction.  If not specified, the
# default is to whitelist everything.

{{- if .Values.matrix.federation.whitelist }}
federation_domain_whitelist:
    {{- range .Values.matrix.federation.whitelist }}
    - {{ . }}
    {{- end }}
{{- end}}

# This option prevents outgoing requests from being sent to the specified
# blacklisted IP address CIDR ranges. If this option is not specified
# then it defaults to private IP address ranges (see the example below).

# The blacklist applies to the outbound requests for federation, identity
# servers, push servers, and for checking key validity for third-party
# invite events. 0.0.0.0 and :: are always blacklisted, whether or not
# they are explicitly listed here, since they correspond
# to unroutable addresses.
#
ip_range_blacklist:
{{- range .Values.matrix.ip_blacklist }}
    - {{ . }}
{{- end }}

# List of ports that Synapse should listen on, their purpose and their
# configuration.
#
# Sub-options for each listener include:
#
# * `port`: the TCP port to bind to.
# * `bind_addresses`: a list of local addresses to listen on. The default is
#      'all local interfaces'.
# * `type`: the type of listener. Normally `http`, but other valid options are:
#
#             * `manhole`: (see the docs [here](../../manhole.md)),
#
#             * `metrics`: (see the docs [here](../../metrics-howto.md)),
# * `tls`: set to true to enable TLS for this listener. Will use the TLS key/cert specified in tls_private_key_path / tls_certificate_path.
# * `x_forwarded`: Only valid for an 'http' listener. Set to true to use the X-Forwarded-For header as the client IP. Useful when Synapse is
#      behind a [reverse-proxy](../../reverse_proxy.md).
# * `request_id_header`: The header extracted from each incoming request that is
#                          used as the basis for the request ID. The request ID is used in
# [logs](../administration/request_log.md#request-log-format) and tracing to
#                          correlate and match up requests. When unset, Synapse will automatically
#                          generate sequential request IDs. This option is useful when Synapse is behind
#                          a [reverse-proxy](../../reverse_proxy.md).
#
#                          _Added in Synapse 1.68.0._
#
# * `resources`: Only valid for an 'http' listener. A list of resources to host
#         on this port. Sub-options for each resource are:
#
#      * `names`: a list of names of HTTP resources. See below for a list of valid resource names.
#
#      * `compress`: set to true to enable gzip compression on HTTP bodies for this resource. This is currently only supported with the
#           `client`, `consent`, `metrics` and `federation` resources.
#
# * `additional_resources`: Only valid for an 'http' listener. A map of
#      additional endpoints which should be loaded via dynamic modules.
#
# Valid resource names are:
# * `client`: the client-server API (/_matrix/client), and the synapse admin API (/_synapse/admin). Also implies `media` and `static`.
# * `consent`: user consent forms (/_matrix/consent). See [here](../../consent_tracking.md) for more.
# * `federation`: the server-server API (/_matrix/federation). Also implies `media`, `keys`, `openid`
# * `keys`: the key discovery API (/_matrix/key).
# * `media`: the media API (/_matrix/media).
# * `metrics`: the metrics interface. See [here](../../metrics-howto.md).
# * `openid`: OpenID authentication. See [here](../../openid.md).
# * `replication`: the HTTP replication API (/_synapse/replication). See [here](../../workers.md).
# * `static`: static resources under synapse/static (/_matrix/static). (Mostly useful for 'fallback authentication'.)
listeners:
  # TLS-enabled listener: for when matrix traffic is sent directly to synapse.
  #
  # Disabled by default. To enable it, uncomment the following. (Note that you
  # will also need to give Synapse a TLS key and certificate: see the TLS section
  # below.)
  #
  #- port: 8448
  #  type: http
  #  tls: true
  #  resources:
  #    - names: [client, federation]

  # Unsecure HTTP listener: for when matrix traffic passes through a reverse proxy
  # that unwraps TLS.
  #
  # If you plan to use a reverse proxy, please see
  # https://github.com/matrix-org/synapse/blob/master/docs/reverse_proxy.md.
  #
  - port: 8008
    tls: false
    type: http
    x_forwarded: true
    bind_addresses: ['0.0.0.0']

    resources:
      - names: [client, federation]
        compress: false

    # example additional_resources:
    #
    #additional_resources:
    #  "/_matrix/my/custom/endpoint":
    #    module: my_module.CustomRequestHandler
    #    config: {}

{{- if .Values.synapse.metrics.enabled }}
  - type: metrics
    port: {{ .Values.synapse.metrics.port }}
    bind_addresses: ['0.0.0.0']

    resources:
      - names: [metrics]
{{- end }}
  # Turn on the twisted ssh manhole service on localhost on the given
  # port.
  #
  #- port: 9000
  #  bind_addresses: ['::1', '127.0.0.1']
  #  type: manhole

# Forward extremities can build up in a room due to networking delays between
# homeservers. Once this happens in a large room, calculation of the state of
# that room can become quite expensive. To mitigate this, once the number of
# forward extremities reaches a given threshold, Synapse will send an
# org.matrix.dummy_event event, which will reduce the forward extremities
# in the room.
#
# This setting defines the threshold (i.e. number of forward extremities in the
# room) at which dummy events are sent. The default value is 10.
#
#dummy_events_threshold: 5


## Homeserver blocking ##

# How to reach the server admin, used in ResourceLimitError
#
admin_contact: 'mailto:{{ .Values.matrix.adminEmail }}'

# Global blocking
#
hs_disabled: {{ .Values.matrix.disabled }}
hs_disabled_message: {{ .Values.matrix.disabledMessage }}

# How long to keep redacted events in unredacted form in the database. After
# this period redacted events get replaced with their redacted form in the DB.
#
# Defaults to `7d`. Set to `null` to disable.
#
redaction_retention_period: {{ .Values.matrix.retentionPeriod }}


## Database ##

database:
    # The database engine name
    name: "psycopg2"
    {{- if .Values.postgresql.allowUnsafeLocale }}
    allow_unsafe_locale: {{ .Values.postgresql.allowUnsafeLocale }}
    {{- end }}
    # Arguments to pass to the engine
    args:
        user: "{{ .Values.postgresql.username }}"
        password: "{{ .Values.postgresql.password }}"
        database: "{{ .Values.postgresql.database }}"

        host: "{{ .Values.postgresql.hostname }}"
        port: "{{ .Values.postgresql.port }}"
        sslmode: {{ .Values.postgresql.sslMode }}
        cp_min: 5
        cp_max: 10

## Logging ##

# A yaml python logging config file as described by
# https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema
#
log_config: "/data/{{ .Values.matrix.serverName }}.log.config"


## Media Store ##

# Enable the media store service in the Synapse master. Uncomment the
# following if you are using a separate media store worker.
#
#enable_media_repo: false

# Directory where uploaded images and attachments are stored.
#
media_store_path: "/data/media_store"

# Media storage providers allow media to be stored in different
# locations.
#
#media_storage_providers:
#  - module: file_system
#    # Whether to write new local files.
#    store_local: false
#    # Whether to write new remote media
#    store_remote: false
#    # Whether to block upload requests waiting for write to this
#    # provider to complete
#    store_synchronous: false
#    config:
#       directory: /mnt/some/other/directory

# Directory where in-progress uploads are stored.
#
uploads_path: "/data/uploads"

# The largest allowed upload size in bytes

max_upload_size: {{ .Values.matrix.uploads.maxSize }}

# Maximum number of pixels that will be thumbnailed

max_image_pixels: {{ .Values.matrix.uploads.maxPixels }}

# Is the preview URL API enabled?
#
# 'false' by default: uncomment the following to enable it (and specify a
# url_preview_ip_range_blacklist blacklist).
#
url_preview_enabled: {{ .Values.matrix.urlPreviews.enabled }}

# List of IP address CIDR ranges that the URL preview spider is denied
# from accessing.  There are no defaults: you must explicitly
# specify a list for URL previewing to work.  You should specify any
# internal services in your network that you do not want synapse to try
# to connect to, otherwise anyone in any Matrix room could cause your
# synapse to issue arbitrary GET requests to your internal services,
# causing serious security issues.
#
# (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly
# listed here, since they correspond to unroutable addresses.)
#
# This must be specified if url_preview_enabled is set. It is recommended that
# you uncomment the following list as a starting point.

{{- if .Values.matrix.urlPreviews.rules.ip.blacklist }}
url_preview_ip_range_blacklist:
    {{- range .Values.matrix.urlPreviews.rules.ip.blacklist }}
    - {{ . }}
    {{- end }}
{{- end }}

# List of IP address CIDR ranges that the URL preview spider is allowed
# to access even if they are specified in url_preview_ip_range_blacklist.
# This is useful for specifying exceptions to wide-ranging blacklisted
# target IP ranges - e.g. for enabling URL previews for a specific private
# website only visible in your network.

{{- if .Values.matrix.urlPreviews.rules.ip.whitelist }}
url_preview_ip_range_whitelist:
    {{- range .Values.matrix.urlPreviews.rules.ip.whitelist}}
    - {{ . }}
    {{- end }}
{{- end }}

# Optional list of URL matches that the URL preview spider is
# denied from accessing.  You should use url_preview_ip_range_blacklist
# in preference to this, otherwise someone could define a public DNS
# entry that points to a private IP address and circumvent the blacklist.
# This is more useful if you know there is an entire shape of URL that
# you know that will never want synapse to try to spider.
#
# Each list entry is a dictionary of url component attributes as returned
# by urlparse.urlsplit as applied to the absolute form of the URL.  See
# https://docs.python.org/2/library/urlparse.html#urlparse.urlsplit
# The values of the dictionary are treated as an filename match pattern
# applied to that component of URLs, unless they start with a ^ in which
# case they are treated as a regular expression match.  If all the
# specified component matches for a given list item succeed, the URL is
# blacklisted.

{{- if .Values.matrix.urlPreviews.rules.url.blacklist }}
url_preview_url_blacklist:
{{ include .Values.matrix.urlPreviews.rules.url.blacklist . | nindent 2 }}
{{- end }}

# The largest allowed URL preview spidering size in bytes

max_spider_size: {{ .Values.matrix.urlPreviews.rules.maxSize }}

# The API endpoint to use for verifying m.login.recaptcha responses.
#
#recaptcha_siteverify_api: "https://www.recaptcha.net/recaptcha/api/siteverify"

{{- if .Values.coturn.enabled -}}

## TURN ##

# The public URIs of the TURN server to give to clients

# Let the user specify coturn URIs explicitly
{{- if not (empty .Values.coturn.uris) }}
turn_uris:
    {{- range .Values.coturn.uris }}
    - {{ . }}
    {{- end }}
{{- else }}

# Default to using the matrix hostname as
turn_uris:
  - "turn:{{ include "matrix.hostname" . }}?transport=udp"

{{- end }}
# The shared secret used to compute passwords for the TURN server

turn_shared_secret: {{ include "matrix.coturn.sharedSecret" . }}

# How long generated TURN credentials last

turn_user_lifetime: 1h

# Whether guests should be allowed to use the TURN server.
# This defaults to True, otherwise VoIP will be unreliable for guests.
# However, it does introduce a slight security risk as it allows users to
# connect to arbitrary endpoints without having first signed up for a
# valid account (e.g. by passing a CAPTCHA).

turn_allow_guests: {{ .Values.coturn.allowGuests }}
{{- end }}

## Registration ##
#
# Registration can be rate-limited using the parameters in the "Ratelimiting"
# section of this file.

# Enable registration for new users.
#
enable_registration: {{ .Values.matrix.registration.enabled }}


# Enable registration without email or captcha verification. Note: this option is *not* recommended,
# as registration without verification is a known vector for spam and abuse. Defaults to `false`. Has no effect
# unless [`enable_registration`](#enable_registration) is also enabled.
# Important: If there are no 3PID requirement defined this is required to set to true, server start will fail otherwise.
# TODO: values
enable_registration_without_verification: {{ .Values.matrix.registration.disable_verification }}

# The user must provide all of the below types of 3PID when registering.
# Examples: email, msisdn
{{- if .Values.matrix.registration.required3Pids }}
registrations_require_3pid:
    {{- range .Values.matrix.registration.required3Pids }}
    - {{ . }}
    {{- end }}
{{- end }}

# Enable 3PIDs lookup requests to identity servers from this server. Defaults to true.
enable_3pid_lookup: {{ .Values.matrix.registration.enable_3pid_lookup }}

# If set, allows registration of standard or admin accounts by anyone who
# has the shared secret, even if registration is otherwise disabled.
#
{{- if .Values.matrix.registration.sharedSecret }}
registration_shared_secret: {{ .Values.matrix.registration.sharedSecret }}
{{- end }}

# Allows users to register as guests without a password/email/etc, and
# participate in rooms hosted on this server which have been made
# accessible to anonymous users.

allow_guest_access: {{ .Values.matrix.registration.allowGuests }}

# Users who register on this homeserver will automatically be joined
# to these rooms

{{- if not (empty .Values.matrix.autoJoinRooms) }}
auto_join_rooms:
    {{- range .Values.matrix.autoJoinRooms }}
    - {{ . }}
    {{- end }}
{{- end }}

## Metrics ###

# Enable collection and rendering of performance metrics
#

{{- if .Values.synapse.metrics.enabled }}
enable_metrics: true
{{- end }}


# Whether or not to report anonymized homeserver usage statistics.
report_stats: {{ .Values.matrix.telemetry }}

## API Configuration ##

# A list of application service config files to use
#
{{- if or .Values.bridges.whatsapp.enabled .Values.bridges.discord.enabled .Values.bridges.irc.enabled }}
app_service_config_files:
{{- end }}
{{- if .Values.bridges.whatsapp.enabled }}
  - "/bridges/whatsapp.yaml"
{{- end }}
{{- if .Values.bridges.discord.enabled }}
  - "/bridges/discord.yaml"
{{- end }}
{{- if .Values.bridges.irc.enabled }}
  - "/bridges/irc.yaml"
{{- end }}


# a secret which is used to sign access tokens. If none is specified,
# the registration_shared_secret is used, if one is given; otherwise,
# a secret key is derived from the signing key.
#
{{- if .Values.matrix.security.macaroonSecretKey }}
macaroon_secret_key: {{ .Values.matrix.security.macaroonSecretKey }}
{{- end }}

## Signing Keys ##

# Path to the signing key to sign messages with
#
signing_key_path: "/data/keys/{{ .Values.matrix.serverName }}.signing.key"


# The trusted servers to download signing keys from.
#
# When we need to fetch a signing key, each server is tried in parallel.
#
# Normally, the connection to the key server is validated via TLS certificates.
# Additional security can be provided by configuring a `verify key`, which
# will make synapse check that the response is signed by that key.
#
# This setting supercedes an older setting named `perspectives`. The old format
# is still supported for backwards-compatibility, but it is deprecated.
#
# 'trusted_key_servers' defaults to matrix.org, but using it will generate a
# warning on start-up. To suppress this warning, set
# 'suppress_key_server_warning' to true.
#
# Options for each entry in the list include:
#
#    server_name: the name of the server. required.
#
#    verify_keys: an optional map from key id to base64-encoded public key.
#       If specified, we will check that the response is signed by at least
#       one of the given keys.
#
#    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is unset,
#       and federation_verify_certificates is not `true`, synapse will refuse
#       to start, because this would allow anyone who can spoof DNS responses
#       to masquerade as the trusted key server. If you know what you are doing
#       and are sure that your network environment provides a secure connection
#       to the key server, you can set this to `true` to override this
#       behaviour.
#
# An example configuration might look like:
#
#trusted_key_servers:
#  - server_name: "my_trusted_server.example.com"
#    verify_keys:
#      "ed25519:auto": "abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr"
#  - server_name: "my_other_trusted_server.example.com"
#
{{- if .Values.matrix.security.trustedKeyServers }}
trusted_key_servers:
    {{- range .Values.matrix.security.trustedKeyServers }}
    - server_name: {{ .serverName }}
      {{- if .verifyKeys }}
      verify_keys:
        {{- range .verifyKeys }}
          {{ .id | quote }}: {{ .key | quote }}
        {{- end }}
      {{- end }}
      {{- if .acceptKeysInsecurely }}
      accept_keys_insecurely: {{ .acceptKeysInsecurely }}
      {{- end }}
    {{- end }}
{{- end }}

# Uncomment the following to disable the warning that is emitted when the
# trusted_key_servers include 'matrix.org'. See above.
#
suppress_key_server_warning: {{ .Values.matrix.security.supressKeyServerWarning }}


# List of OpenID Connect (OIDC) / OAuth 2.0 identity providers, for registration
# and login.
# for information on how to configure these options.
# See https://github.com/matrix-org/synapse/blob/develop/docs/usage/configuration/config_documentation.md#oidc_providers
#
# Example:
# oidc_providers:
#   - idp_id: my_idp
#     idp_name: "My OpenID provider"
#     idp_icon: "mxc://example.com/mediaid"
#     discover: false
#     issuer: "https://accounts.example.com/"
#     client_id: "provided-by-your-issuer"
#     client_secret: "provided-by-your-issuer"
#     client_auth_method: client_secret_post
#     scopes: ["openid", "profile"]
#     authorization_endpoint: "https://accounts.example.com/oauth2/auth"
#     token_endpoint: "https://accounts.example.com/oauth2/token"
#     userinfo_endpoint: "https://accounts.example.com/userinfo"
#     jwks_uri: "https://accounts.example.com/.well-known/jwks.json"
#     skip_verification: true
oidc_providers: {{ .Values.matrix.oidc_providers | toYaml | nindent 2 }}


# Configuration for sending emails from Synapse.
#
email:
  enable_notifs: {{ .Values.mail.enabled }}
  notif_from: {{ .Values.mail.from }}
  {{- if .Values.mail.relay.enabled }}
  smtp_host: {{ include "matrix.fullname" . }}-exim-relay
  smtp_port: {{ .Values.mail.relay.service.port }}
  {{- else }}
  smtp_host: {{ .Values.mail.external.host }}
  smtp_port: {{ .Values.mail.external.port }}
  smtp_user: {{ .Values.mail.external.username }}
  smtp_pass: {{ .Values.mail.external.password }}
  require_transport_security: {{ .Values.mail.external.requireTransportSecurity }}
  {{- end }}

  # Custom URL for client links within the email notifications. By default
  # links will be based on "https://matrix.to".
  #
  # (This setting used to be called riot_base_url; the old name is still
  # supported for backwards-compatibility but is now deprecated.)
  {{- if .Values.mail.riotUrl }}
  client_base_url: {{ .Values.mail.riotUrl }}
  {{- else if .Values.ingress.enabled }}
  client_base_url: {{ .Values.ingress.hosts.riot }}
  {{- end }}

  # Configure the time that a validation email will expire after sending.
  # Defaults to 1h.
  #
  #validation_token_lifetime: 15m

{{ if .Values.matrix.homeserverExtra }}
{{- toYaml .Values.matrix.homeserverExtra }}
{{- end }}
{{- end }}
{{- end }}
